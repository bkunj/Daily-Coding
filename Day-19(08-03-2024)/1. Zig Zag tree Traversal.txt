Q.) Binary Tree Zigzag Level Order Traversal
Link: https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/description/ 

Solution: 

import java.util.*;


class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        if(root == null) return ans;
        Queue<TreeNode> qu = new LinkedList<>();
        qu.offer(root);
        boolean flag = true;
        while(!qu.isEmpty()){
            int size = qu.size();
            List<Integer> temp = new ArrayList<>();
            for(int i = 0; i < size; i++){
                TreeNode node = qu.poll();
                if(flag) {
                    temp.add(node.val); // Add to end of list when flag is true
                } else {
                    temp.add(0, node.val); // Add to start of list when flag is false
                }
                if(node.left != null) qu.offer(node.left);
                if(node.right != null) qu.offer(node.right);
            }
            flag = !flag;
            ans.add(temp);
        }
        return ans;
    }
}

T.C = O(N)
S.C =O(N)
