Q.) 1614. Maximum Nesting Depth of the Parentheses
Link: https://leetcode.com/problems/maximum-nesting-depth-of-the-parentheses/description/ 
Solution:
M-1) Using Stack:
CODE:
class Solution {
    public int maxDepth(String s) {
        Stack<Character> stack = new Stack<>();
        int maxi = 0;
        int currentMax = 0;
        for (char ch : s.toCharArray()) {
            if(ch=='('){
                stack.push(ch);
            }
            if(ch==')'){
                currentMax = stack.size();
                maxi = Math.max(currentMax,maxi);
                stack.pop();
            }
        }
        return maxi;
    }
}
Time Complexity: O(N), Space Complexity: O(N).
========
M-2) Without StacK:
CODE:
class Solution {
    public int maxDepth(String s) {
        int count=0,max=0;
        for(int i=0;i<s.length();i++){
            if(s.charAt(i)=='(') count++;
            max=Math.max(count,max);
            if(s.charAt(i)==')') count--;
        }
        return max;
    }
}
Time Complexity: O(N), Space Complexity: O(1).
=============================================================